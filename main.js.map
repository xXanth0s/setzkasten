{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/checkliste/checkliste-checklistitem/checkliste-checklistitem.component.ts","./src/app/components/checkliste/checkliste-checklistitem/checkliste-checklistitem.component.html","./src/app/components/checkliste/checkliste.component.ts","./src/app/components/checkliste/checkliste.component.html","./src/app/components/katalog/katalog-sammelstueck/katalog-sammelstueck.component.ts","./src/app/components/katalog/katalog-sammelstueck/katalog-sammelstueck.component.html","./src/app/components/katalog/katalog.component.ts","./src/app/components/katalog/katalog.component.html","./src/app/components/sammelstueck-bearbeiten/sammelstueck-bearbeiten.component.ts","./src/app/components/sammelstueck-bearbeiten/sammelstueck-bearbeiten.component.html","./src/app/components/sammelstueck-hinzufuegen/sammelstueck-hinzufuegen.component.ts","./src/app/components/sammelstueck-hinzufuegen/sammelstueck-hinzufuegen.component.html","./src/app/components/sammelstueck-kopieren/sammelstueck-kopieren-sammelstueck/sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk.component.ts","./src/app/components/sammelstueck-kopieren/sammelstueck-kopieren-sammelstueck/sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk.component.html","./src/app/components/sammelstueck-kopieren/sammelstueck-kopieren.component.ts","./src/app/components/sammelstueck-kopieren/sammelstueck-kopieren.component.html","./src/app/components/sammelstueck/sammelstueck.component.ts","./src/app/components/sammelstueck/sammelstueck.component.html","./src/app/components/sammlung-anlegen/sammlung-anlegen.component.ts","./src/app/components/sammlung-anlegen/sammlung-anlegen.component.html","./src/app/components/sammlung-bearbeiten/sammlung-bearbeiten.component.ts","./src/app/components/sammlung-bearbeiten/sammlung-bearbeiten.component.html","./src/app/components/sammlung/sammlung-sammelstueck/sammlung-sammelstueck.component.ts","./src/app/components/sammlung/sammlung-sammelstueck/sammlung-sammelstueck.component.html","./src/app/components/sammlung/sammlung.component.ts","./src/app/components/sammlung/sammlung.component.html","./src/app/components/sammlungen-uebersicht/sammlungen-uebersicht-sammlung/sammlungen-uebersicht-sammlung.component.ts","./src/app/components/sammlungen-uebersicht/sammlungen-uebersicht-sammlung/sammlungen-uebersicht-sammlung.component.html","./src/app/components/sammlungen-uebersicht/sammlungenuebersicht.component.ts","./src/app/components/sammlungen-uebersicht/sammlungenuebersicht.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {TemplateAccessibilityTabindexNoPositiveRule} from \"codelyzer\";\nimport {KatalogComponent} from \"./components/katalog/katalog.component\";\nimport {SammelstueckHinzufuegenComponent} from \"./components/sammelstueck-hinzufuegen/sammelstueck-hinzufuegen.component\";\nimport {SammlungComponent} from \"./components/sammlung/sammlung.component\";\nimport {SammlungenuebersichtComponent} from \"./components/sammlungen-uebersicht/sammlungenuebersicht.component\";\nimport {SammlungAnlegenComponent} from \"./components/sammlung-anlegen/sammlung-anlegen.component\";\nimport {SammlungBearbeitenComponent} from \"./components/sammlung-bearbeiten/sammlung-bearbeiten.component\";\nimport {ChecklisteComponent} from \"./components/checkliste/checkliste.component\";\nimport {SammelstueckBearbeitenComponent} from \"./components/sammelstueck-bearbeiten/sammelstueck-bearbeiten.component\";\nimport {SammelstueckComponent} from \"./components/sammelstueck/sammelstueck.component\";\nimport {SammelstueckKopierenComponent} from \"./components/sammelstueck-kopieren/sammelstueck-kopieren.component\";\n\n\nconst routes: Routes = [\n  {\n    path: 'katalog/:id',\n    component: KatalogComponent\n  },\n  {\n    path: 'hinzufuegen/:collectionID', // http://localhost:4200/hinzufuegen\n    component: SammelstueckHinzufuegenComponent\n  },\n  {\n    path: 'sammlung/:id',\n    component: SammlungComponent\n  },\n  {\n    path: '',\n    component: SammlungenuebersichtComponent\n  },\n  {\n    path: 'sammlunganlegen',\n    component: SammlungAnlegenComponent\n  },\n  {\n    path: 'sammlungbearbeiten',\n    component: SammlungBearbeitenComponent\n  },\n  {\n    path: 'checklist/:id',\n    component: ChecklisteComponent\n  },\n  {\n    path: 'sammelstueckbearbeiten/:collectionID/:id',\n    component: SammelstueckBearbeitenComponent\n  },\n  {\n    path: 'sammelstueck/:collectionID/:id',\n    component: SammelstueckComponent\n  },\n  {\n    path: 'sammelstueckkopieren/:id',\n    component: SammelstueckKopierenComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DigitalerSetzkasten';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { KatalogComponent } from './components/katalog/katalog.component';\nimport { KatalogSammelstueckComponent } from './components/katalog/katalog-sammelstueck/katalog-sammelstueck.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { SammelstueckHinzufuegenComponent } from './components/sammelstueck-hinzufuegen/sammelstueck-hinzufuegen.component';\nimport { SammlungComponent } from './components/sammlung/sammlung.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {SammlungenuebersichtComponent} from './components/sammlungen-uebersicht/sammlungenuebersicht.component';\nimport { SammlungenUebersichtSammlungComponent } from './components/sammlungen-uebersicht/sammlungen-uebersicht-sammlung/sammlungen-uebersicht-sammlung.component';\nimport { SammlungAnlegenComponent } from './components/sammlung-anlegen/sammlung-anlegen.component';\nimport { SammlungBearbeitenComponent } from './components/sammlung-bearbeiten/sammlung-bearbeiten.component';\nimport { ChecklisteComponent } from './components/checkliste/checkliste.component';\nimport { SammelstueckBearbeitenComponent } from './components/sammelstueck-bearbeiten/sammelstueck-bearbeiten.component';\nimport { SammelstueckComponent } from './components/sammelstueck/sammelstueck.component';\nimport { SammlungSammelstueckComponent } from './components/sammlung/sammlung-sammelstueck/sammlung-sammelstueck.component';\nimport { ChecklisteChecklistitemComponent } from './components/checkliste/checkliste-checklistitem/checkliste-checklistitem.component';\nimport {SammelstueckKopierenComponent} from \"./components/sammelstueck-kopieren/sammelstueck-kopieren.component\";\nimport { SammelstueckZuWeitererSammlungHzfgAuswahlmoeglichkComponent } from './components/sammelstueck-kopieren/sammelstueck-kopieren-sammelstueck/sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    KatalogComponent,\n    KatalogSammelstueckComponent,\n    SammelstueckHinzufuegenComponent,\n    SammlungComponent,\n    SammlungenuebersichtComponent,\n    SammlungenUebersichtSammlungComponent,\n    SammlungAnlegenComponent,\n    SammlungBearbeitenComponent,\n    ChecklisteComponent,\n    SammelstueckBearbeitenComponent,\n    SammelstueckComponent,\n    SammlungSammelstueckComponent,\n    ChecklisteChecklistitemComponent,\n    SammelstueckKopierenComponent,\n    SammelstueckZuWeitererSammlungHzfgAuswahlmoeglichkComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import {Component, Input, OnInit} from '@angular/core';\nimport {ChecklistItem} from \"../../../models/checklist-item\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {environment} from \"../../../../environments/environment\";\n\n\n@Component({\n  selector: 'app-checkliste-checklistitem',\n  templateUrl: './checkliste-checklistitem.component.html',\n  styleUrls: ['./checkliste-checklistitem.component.css']\n})\nexport class ChecklisteChecklistitemComponent implements OnInit {\n\n\n  @Input() checklistitem: ChecklistItem;\n  public id: number;\n  public collectionID: number;\n\n  constructor(private readonly http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    console.log(this.checklistitem);\n    this.id = this.checklistitem.id;\n    this.collectionID = this.checklistitem.collectionID;\n  }\n\n  toggleSelection(){\n    //changes the bought status of the item if the check mark is changed\n    this.checklistitem.bought= !this.checklistitem.bought;\n    this.http.post(environment.apiBaseUrl + '/updateChecklistitem', this.checklistitem).subscribe()\n  }\n\n  deleteOneItem() {\n    console.log(\"delete clicked\");\n    if (confirm(`Möchten Sie das Item \"${this.checklistitem.item}\" wirklich löschen?`)) {\n      //ask the user if they really meant to click on delete\n      const sendData = {id: this.id};\n      console.log(this.id);\n      this.http.post(environment.apiBaseUrl + '/deleteChecklistitem', sendData).subscribe((data) => {\n        //sends the ID of the item to the index.js in the app folder which deletes it from the database\n        console.log(\"DELETED\");\n        location.reload();\n        //reload the page so that the\n      });\n    }\n    else {\n      console.log(\"abbrechen gewählt\");\n    }\n  }\n}\n","<ul class=\"item\">\n  <li class=\"item\" item-id=\"\">\n    <div class=\"button clear-list\" (click)=\"deleteOneItem()\"><i class=\"far fa-trash-alt\"></i></div>\n    <input [ngModel]=\"checklistitem.bought\" type=\"checkbox\" name=\"item-status\" class=\"item-status-checkbox\" (click)=\"toggleSelection()\">\n    <span class=\"item-name\">{{checklistitem.item}}</span>\n  </li>\n</ul>\n","import {Component, OnInit} from '@angular/core';\nimport {ChecklistItem} from \"../../models/checklist-item\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-checkliste',\n  templateUrl: './checkliste.component.html',\n  styleUrls: ['./checkliste.component.css']\n})\nexport class ChecklisteComponent implements OnInit {\n  //Hier noch richtige ID setzen\n  public checklistitems: ChecklistItem[] = [];\n  public numOfChecklistitems: number;\n  public itemID: number;\n  public itemTitle: string;\n  public bought: number = 0;\n  public collectionID: string;\n  public highestID: number;\n  public boughtItems: ChecklistItem[] = [];\n  public collectionName: string;\n  public headline: string;\n\n  constructor(private readonly http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    console.log(this.activatedRoute.snapshot);\n    this.collectionID = this.activatedRoute.snapshot.params.id;\n    //gets the collectionID from the path\n    this.loadSammlungsname();\n    this.loadChecklistitems();\n  }\n\n  loadSammlungsname(){\n    //gets the name of the collection from the database and loads it into the headline\n    this.http.get<Sammlung[]>(environment.apiBaseUrl + '/Sammlung/' + this.collectionID).subscribe((data) => {\n      this.collectionName = data[0].collectionName;\n      this.headline = \"Checkliste zur \" + this.collectionName + \"-Sammlung\";\n    });\n  }\n\n  private loadChecklistitems() {\n    //gets all the checklist items that belong to this collection and loads them\n    this.http.get<ChecklistItem[]>(environment.apiBaseUrl + '/checklist/' + this.collectionID).subscribe((data) => {\n      console.log(data);\n      this.checklistitems = data;\n    });\n    console.log(\"loading\");\n  }\n\n\n  addChecklistItem() {\n    console.log(\"add Clicked\");\n    if (this.itemTitle == undefined) {\n      //alert if there's no title\n      alert(\"Bitte geben Sie einen Titel an\");\n    } else {\n      if (this.checkDoubleTitle(this.itemTitle) == true) {\n        //asks user if they still want to create this item if an item with this name already exists\n        if (confirm(`Es gibt bereits ein Item \"${this.itemTitle}\". Möchten Sie ein Gleichnamiges erstellen?`)) {\n            const sendData = {item: this.itemTitle, bought: this.bought};\n            this.http.post(environment.apiBaseUrl + '/checklist/' + this.collectionID, sendData).subscribe((data) => {\n              //creates a new checklist item with the input data\n              location.reload();\n              //reloads the window to show the new item\n              this.itemTitle = \"\";\n              //empties the input field\n            });\n        }\n      } else {\n          const sendData = {item: this.itemTitle, bought: this.bought};\n          this.http.post(environment.apiBaseUrl + '/checklist/' + this.collectionID, sendData).subscribe((data) => {\n            //creates a new checklist item with the input data\n            location.reload();\n            //reloads the window to show the new item\n            this.itemTitle = \"\";\n            //empties the input field\n        });\n      }\n    }\n  }\n\n  checkDoubleTitle(title) {//checks if the title that's input is already the title of another checklist item\n    this.http.get<ChecklistItem[]>(environment.apiBaseUrl + '/checklist/' + this.collectionID).subscribe((data) => {\n      console.log(data);\n      this.checklistitems = data;\n      //gets all the checklist items to compare them\n    });\n    for (let i = 0; i < this.checklistitems.length; i++) {\n      if (this.checklistitems[i].item == title) {\n        //checks for each checklist item in the array if it matches the input name, if yes it returns true\n        return true;\n      }\n    }\n    return false;\n    //if no match was found it returns false\n  }\n\n  deleteChecklistItems() {\n    if (confirm(\"Möchten Sie wirklich alle abgehakten Items löschen? Sie können nicht wieder hergestellt werden\")) {\n      //asks if users really means to delete all checked items\n      console.log(\"ok clicked\");\n      console.log(this.checklistitems);\n      for(let i = 0; i < this.checklistitems.length; i++){\n        if(this.checklistitems[i].bought == true){\n          //checks for all checklist items if they have been bought deletes each one where that is true\n          let sendData = {id: this.checklistitems[i].id};\n          this.http.post(environment.apiBaseUrl + '/deleteChecklistitem', sendData).subscribe((data) => {\n            console.log(\"DELETED\");\n          });\n        }\n      }\n      location.reload();\n      //reloads the window to not show the deleted items anymore\n    }\n    else {\n      console.log(\"abbrechen gewählt\");\n    }\n  }\n\n\n  navigateBack() {\n    //navigates back to the collection\n    console.log(\"navigateBack wird ausgeführt\");\n    this.router.navigateByUrl('/sammlung/' + this.collectionID);\n  }\n}\n","<!-- für später: <input  type=\"checkbox\" name=\"item-status\" class=\"item-status-checkbox\"> -->\n<header>\n  <h1>{{headline}}</h1>\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<body>\n  <input [(ngModel)]=\"itemTitle\" type=\"text\" name=\"item-name\" class=\"item-name-input\" id=\"itemTitle\">\n  <div class=\"button new-item\" (click)=\"addChecklistItem()\"><i class=\"fas fa-plus\"></i></div>\n  <div class=\"button clear-list\" (click)=\"deleteChecklistItems()\"><i class=\"far fa-trash-alt\"></i></div>\n  <div id=\"content\">\n    <div id=\"items\">\n      <div *ngFor=\"let checklistItem of checklistitems\">\n        <app-checkliste-checklistitem  [checklistitem]=\"checklistItem\"></app-checkliste-checklistitem>\n      </div>\n    </div>\n  </div>\n  <template id=\"item-template\">\n    <li class=\"item\" item-id=\"\">\n      <input type=\"checkbox\" name=\"item-status\" class=\"item-status-checkbox\">\n      <input type=\"text\" name=\"item-name\" class=\"item-name-input\">\n    </li>\n  </template>\n</body>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SammelStueck} from \"../../../models/sammel-stueck\";\nimport {environment} from \"../../../../environments/environment\";\n\n@Component({\n  selector: 'app-katalog-sammelstueck',\n  templateUrl: './katalog-sammelstueck.component.html',\n  styleUrls: ['./katalog-sammelstueck.component.css']\n})\nexport class KatalogSammelstueckComponent implements OnInit {\n\n\n  @Input() sammelstueck: SammelStueck;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getImageURL(){\n    //returns the path where the image is saved\n    console.log(this.sammelstueck.pieceImagePath);\n    return `${environment.apiBaseUrl}/${this.sammelstueck.pieceImagePath}`;\n  }\n\n}\n","<ul class=\"pieces\">\n  <div class=\"catalogue-grid-container-inside\">\n    <div class=\"name-image-container\">\n      <span class=\"piece-name\">{{sammelstueck.pieceName}}</span>\n      <img class=\"image\" width = \"300\" height = \"\" [src]=\"getImageURL()\">\n    </div>\n    <span class=\"description\">{{sammelstueck.pieceDescription}}</span>\n  </div>\n</ul>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {Router} from \"@angular/router\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-katalog',\n  templateUrl: './katalog.component.html',\n  styleUrls: ['./katalog.component.css']\n})\nexport class KatalogComponent implements OnInit {\n  @Input() sammelstueck: SammelStueck;\n  public collectionID: string;\n  public constant: string = '-Sammlung';\n  public sammlungsname: string;\n  public besitzername: string;\n  public headline: string;\n  public headline2: string;\n  public sammelstuecke: SammelStueck[] = [];\n\n  constructor(private readonly http: HttpClient,  private router: Router) {\n  }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\")\n    this.collectionID = urlChunks[urlChunks.length - 1];\n    //gets the collectionID from the path\n    this.loadSammelstuecke();\n    this.loadSammlung();\n  }\n\n  private loadSammelstuecke() {\n    //gets all pieces from this collection and loads them on the page\n    let url = environment.apiBaseUrl + \"/Sammelstuecke/\" + this.collectionID;\n    this.http.get<SammelStueck[]>(url).subscribe((data) => {\n      this.sammelstuecke = data;\n    });\n  }\n\n  private loadSammlung(){\n    //gets the collection data and saves it\n    this.http.get<Sammlung[]>(environment.apiBaseUrl + '/Sammlung/' + this.collectionID).subscribe((data) => {\n      this.sammlungsname = data[0].collectionName;\n      this.besitzername = data[0].collectorsName;\n      this.headline = this.sammlungsname + \"-Sammlung\";\n      this.headline2 = \"von \" + this.besitzername;\n    });\n  }\n\n  navigateBack(){\n    //navigates back to the collection\n    this.router.navigateByUrl(\"/sammlung/\" + this.collectionID);\n  }\n\n  print() {\n    //enables the user to download this page\n    window.print();\n  }\n}\n\n","  <h1>{{headline}}</h1>\n  <h1>{{headline2}}</h1>\n<div class = \"buttons\">\n  <span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n  <button class =\"button print-button\" (click)=\"print()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i></button>\n</div>\n<div class=\"catalogue-grid-container-outside\">\n  <div *ngFor=\"let sammelStueck of sammelstuecke\">\n    <app-katalog-sammelstueck  [sammelstueck]=\"sammelStueck\"></app-katalog-sammelstueck>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {ChecklistItem} from \"../../models/checklist-item\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-sammelstueck-bearbeiten',\n  templateUrl: './sammelstueck-bearbeiten.component.html',\n  styleUrls: ['./sammelstueck-bearbeiten.component.css']\n})\nexport class SammelstueckBearbeitenComponent implements OnInit {\n  public pieceName : string;\n  public pieceDescription: string;\n  public collectionName: string =\"bittelöschemich\";\n  public piecePrice: string =\"bittelöschemich\";\n  //Das muss übergeben werden!\n  public id: string;\n  public collectionID: string;\n  @Input() sammelstueck: SammelStueck;\n  public sammelstuecke: SammelStueck[] = [];\n  private file: any;\n\n  constructor(private readonly http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\")\n    this.id = urlChunks[urlChunks.length - 1];\n    this.collectionID = urlChunks[urlChunks.length - 2];\n    //gets pieceID and collectionID from the path\n    this.loadSammelstueck();\n  }\n\n  private loadSammelstueck() {\n    //loads the piece into the page\n    this.http.get<SammelStueck[]>(environment.apiBaseUrl + '/Sammelstueck/' + this.id).subscribe((data) => {\n      this.pieceName = data[0].pieceName;\n      this.pieceDescription = data[0].pieceDescription;\n      this.sammelstueck = data[0];\n    });\n  }\n\n  navigateBack() {\n    //navigates back to the piece page\n    this.router.navigateByUrl(`/sammelstueck/${this.collectionID}/${this.id}`);\n  }\n\n  deleteSammelstueck() {\n    //deletes the piece=\n    const sendData = {id: this.id};\n    this.http.post(environment.apiBaseUrl + '/deleteSammelstueck', sendData).subscribe((data) => {\n      this.navigateBack();\n    });\n  }\n\n  editClicked() {\n    console.log(\"edit wurde aufgerufen\");\n    if(this.pieceName==\"\" || this.pieceName==undefined){\n      alert(\"Bitte geben Sie einen Namen für das Sammelstück an\");\n      //if there is no name in the input it alerts the user to give the piece a name\n    }\n    else{\n      let sendDataDoesExist = {title: this.pieceName, id: this.id, collectionID: this.collectionID};\n      this.http.post<{doesExist: boolean}>(environment.apiBaseUrl + '/doesSammelstueckExist', sendDataDoesExist).subscribe((data) => {\n        //checks if piece already exists in the collection\n        const doesExist = data.doesExist;\n        if(doesExist){\n          if (confirm(`Es gibt bereits ein Sammelstück mit Namen \"${this.pieceName}\" in der Sammlung. Möchten Sie ein gleichnamiges Sammelstück erstellen?`)) {\n            //if a piece of the same name exists in this collection, asks user to confirm if they are sure they want to have two with the same name\n            if(this.pieceDescription == undefined){\n              this.pieceDescription = \"\";\n              //if there is no description input description does not become undefined but empty instead\n            }\n            const sendData = {id: this.id, pieceName: this.pieceName, pieceDescription:this.pieceDescription, imagePath: this.sammelstueck.pieceImagePath};\n            this.http.post(environment.apiBaseUrl + '/updateSammelstueck', sendData).subscribe((data) => {\n              //updates the piece to the input data and navigates back to the piece page\n              this.navigateBack();\n            });\n          }\n        }\n        else {\n          if(this.pieceDescription == undefined){\n            this.pieceDescription = \"\";\n            //if there is no description input description does not become undefined but empty instead\n          }\n\n          const formData = new FormData();\n          formData.append('file', this.file);\n          formData.append('pieceID', `${this.id}`);\n          formData.append('pieceTitle', `${this.pieceName}`);\n          formData.append('pieceDescription', `${this.pieceDescription}`);\n          this.http.post(environment.apiBaseUrl + '/updateSammelstueck', formData).subscribe((data) => {\n            //updates the piece to the input data and navigates back to the piece page\n            this.navigateBack();\n          });\n        }\n      });\n    }\n  }\n\n  getImageURL() {\n    //gets the image path\n    return `${environment.apiBaseUrl}/${this.sammelstueck.pieceImagePath}`;\n  }\n\n\n  onFileSelect($event: any) {\n    //if a new picture has been selected it uploads this and saves it\n    // @ts-ignore\n    if (event.target?.files?.length > 0) {\n      // @ts-ignore\n      this.file = event.target.files[0];\n      this.sammelstueck.pieceImagePath = this.file.name;\n    }\n  }\n}\n","<header>\n    <h1 id=\"headline\">Sammelstück bearbeiten</h1>\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<body>\n  <div id = \"input-fields\">\n      <div id=\"content\">\n      <p>Name des Sammelstücks:</p>\n      <input type=\"text\"  [(ngModel)]=\"pieceName\" name=\"name-des-stuecks\" class=\"name-input\">\n      <p>Beschreibung des Sammelstücks:</p>\n        <textarea [(ngModel)]=\"pieceDescription\" type=\"text\" name=\"beschreibung-des-stuecks\" class=\"description-input\" id=\"desc\"></textarea>\n        <p>Bild vom Sammelstück (optional):</p>\n        <img class=\"image\" height=\"220\" [src]=\"getImageURL()\">\n        <input type=\"file\" name=\"bild-des-stuecks\" class=\"bild-input\" (change)=\"onFileSelect($event)\" />\n    </div>\n    <span class = \"button edit\" (click)=\"editClicked()\"><i class=\"fas fa-edit\"></i></span>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {FileChangeEvent} from \"@angular/compiler-cli/src/perform_watch\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-sammelstueck-hinzufuegen',\n  templateUrl: './sammelstueck-hinzufuegen.component.html',\n  styleUrls: ['./sammelstueck-hinzufuegen.component.css']\n})\nexport class SammelstueckHinzufuegenComponent implements OnInit {\n\n  public pieceID: number;\n  public pieceTitle: string;\n  public pieceDescription: string;\n  public piecePrice: string;\n  public picturePath: string;\n  public collectionName: string;\n  public nameInHeadline: string;\n  public sammelstuecke: SammelStueck[] = [];\n  public numOfSammelstuecke: number;\n  //muss eigentlich übergeben werden!\n  public collectionID: string;\n  public highestID: number;\n  private file: any;\n\n  constructor(private readonly http: HttpClient, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\")\n    this.collectionID = urlChunks[urlChunks.length - 1];\n    //gets the collectionID from the path and saves it\n    this.loadSammlung();\n  }\n\n  navigateBack() {\n    //navigates back to the collection page\n    this.router.navigateByUrl('/sammlung/' + this.collectionID);\n  }\n\n  titleChanged($event: Event) {\n   //title was changed\n  }\n\n  private loadSammlung(){\n    //gets the collection and loads its data into the headline\n    this.http.get<Sammlung[]>(environment.apiBaseUrl + '/Sammlung/' + this.collectionID).subscribe((data) => {\n      this.collectionName = data[0].collectionName;\n      this.nameInHeadline = \"Sammelstück zur \" + this.collectionName + \"-Sammlung hinzufügen\";\n    });\n  }\n\n  addclicked() {\n    if (this.pieceTitle == \"\" || this.pieceTitle == undefined) {\n      alert(\"Bitte geben Sie einen Namen für das Sammelstück an\");\n      //alerts the user if there is no title input and asks them to input one\n    } else {\n      if (this.pieceDescription == undefined) {\n        this.pieceDescription = \"\";\n        //if there is no description input description does not become undefined but empty instead\n      }\n      let sendDataDoesExist = {title: this.pieceTitle, id: this.pieceID, collectionID: this.collectionID};\n      this.http.post<{doesExist: boolean}>(environment.apiBaseUrl + '/doesSammelstueckExist', sendDataDoesExist).subscribe((data) => {\n        const doesExist = data.doesExist;\n        //checks if a piece with this name and id already exists in this collection\n        if(doesExist){\n          if (confirm(`Es existiert bereits ein Sammelstück mit Namen \"${this.pieceTitle}\" in der Sammlung. Möchten Sie ein gleichnamiges Sammelstück erstellen?`)) {\n            //if the same piece already exists asks the user if they really want to create it again\n            this.http.get<SammelStueck[]>(environment.apiBaseUrl + '/Sammelstuecke').subscribe((data) => {\n              this.sammelstuecke = data;\n              this.numOfSammelstuecke = this.sammelstuecke.length;\n              this.getID(data);\n              const formData = new FormData();\n              formData.append('file', this.file);\n              formData.append('pieceID', `${this.pieceID}`);\n              formData.append('pieceTitle', `${this.pieceTitle}`);\n              formData.append('pieceDescription', `${this.pieceDescription}`);\n              formData.append('collection', `${this.collectionID}`);\n              debugger;\n              this.http.post(environment.apiBaseUrl + '/Sammelstuecke', formData).subscribe((data) => {\n                //sends all the files to the database and creates the piece\n                this.navigateBack();\n                //navigates back to the collection page\n              });\n            });\n          }\n        }\n        else {\n          this.http.get<SammelStueck[]>(environment.apiBaseUrl + '/Sammelstuecke').subscribe((data) => {\n            //gets all the pieces in the database\n            this.sammelstuecke = data;\n            this.numOfSammelstuecke = this.sammelstuecke.length;\n            this.getID(data);\n            //creates an ID for the piece\n            const formData = new FormData();\n            formData.append('file', this.file);\n            formData.append('pieceID', `${this.pieceID}`);\n            formData.append('pieceTitle', `${this.pieceTitle}`);\n            formData.append('pieceDescription', `${this.pieceDescription}`);\n            formData.append('collection', `${this.collectionID}`);\n            this.http.post(environment.apiBaseUrl + '/Sammelstuecke', formData).subscribe((data) => {\n               //sends all the files to the database and creates the piece\n               this.navigateBack();\n               //navigates back to the collection page\n            });\n          });\n        }\n      });\n    }\n  }\n\n  getID(sammelstuecke){\n  //creates a new piece id\n    this.highestID = 0;\n    for(let i = 0; i<sammelstuecke.length; i++){\n      if(sammelstuecke[i].id>this.highestID){\n        this.highestID = sammelstuecke[i].id\n        //looks for the highest ID in the piece table\n      }\n    }\n    this.pieceID = this.highestID +1;\n    //gives the piece an ID that is one higher than the highest existing one\n  }\n\n  copyPieceFromCollection(){\n    //navigates to the copy piece into this collection page\n    this.router.navigateByUrl('/sammelstueckkopieren/' + this.collectionID);\n  }\n\n  onFileSelect($event: any) {\n    //if a new picture has been selected it uploads this and saves it\n    // @ts-ignore\n    if (event.target?.files?.length > 0) {\n      // @ts-ignore\n      this.file = event.target.files[0];\n      console.log(this.file);\n    }\n  }\n}\n","<header>\n  <h1 id=\"headline\">{{nameInHeadline}}</h1>\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<div id = \"input-fields\" class = container>\n  <div id=\"content\" class=\"container\">\n    <p>Name des Sammelstücks:</p>\n    <input [(ngModel)]=\"pieceTitle\" type=\"text\" name=\"name-des-stuecks\" class=\"name-input\" id=\"title\">\n    <p>Beschreibung des Sammelstücks:</p>\n    <textarea [(ngModel)]=\"pieceDescription\" type=\"text\" name=\"beschreibung-des-stuecks\" class=\"beschreibung-input\" id=\"desc\"></textarea>\n    <<p>Bild vom Sammelstück (optional):</p>\n    <input type=\"file\" name=\"bild-des-stuecks\" class=\"bild-input\" (change)=\"onFileSelect($event)\" />\n  </div>\n  <div id =\"buttons\">\n    <span class=\"button add\" (click)=\"addclicked()\"><i class=\"fas fa-plus\"></i></span>\n    <span class=\"button copy\" (click)=\"copyPieceFromCollection()\"><i>Existierendes Sammelstück importieren...</i></span>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SammelStueck} from \"../../../models/sammel-stueck\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {environment} from \"../../../../environments/environment\";\n\n@Component({\n  selector: 'app-sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk',\n  templateUrl: './sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk.component.html',\n  styleUrls: ['./sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk.component.css']\n})\n\nexport class SammelstueckZuWeitererSammlungHzfgAuswahlmoeglichkComponent implements OnInit {\n  @Input() sammelstueck: SammelStueck;\n  public collectionID: string;\n  public pieceID: number;\n  public pieceDescription: string;\n  public pieceName: string;\n  public picturePath: string;\n  public highestID: number;\n  public sammelstuecke: SammelStueck[] = [];\n  public numOfSammelstuecke: number;\n\n  constructor(private readonly http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\")\n    this.collectionID = urlChunks[urlChunks.length - 1];\n    console.log(this.collectionID);\n    this.pieceDescription = this.sammelstueck.pieceDescription;\n    this.pieceName = this.sammelstueck.pieceName;\n    this.picturePath = this.sammelstueck.pieceImagePath;\n    this.pieceID = this.sammelstueck.id;\n  }\n\n  getImageURL(){\n   // console.log(this.sammelstueck.pieceImage);\n    return `${environment.apiBaseUrl}/${this.sammelstueck.pieceImagePath}`;\n  }\n\n  choseThis() {\n    let sendDataDoesExist = {title: this.pieceName, id: this.pieceID, collectionID: this.collectionID};\n    this.http.post<{doesExist: boolean}>(environment.apiBaseUrl + '/doesSammelstueckExist', sendDataDoesExist).subscribe((data) => {\n      const doesExist = data.doesExist;\n      if(doesExist){\n        if (confirm(`Es existiert bereits ein Sammelstück mit Namen \"${this.pieceName}\" in der Sammlung. Möchten Sie es trotzdem importieren?`)) {\n              const sendData = { pieceID: this.pieceID, collectionID: this.collectionID};\n              console.log(sendData);\n              this.http.post(environment.apiBaseUrl + '/Sammelstueckkopieren', sendData).subscribe((data) => {\n                location.reload();\n              });\n              this.navigateBack();\n        }\n        }\n      else {\n        if (confirm(`Möchten Sie das Sammelstück \"${this.sammelstueck.pieceName}\" wirklich zur Sammlung hinzufügen?`)) {\n          const sendData = { pieceID: this.pieceID, collectionID: this.collectionID};\n          console.log(sendData);\n          this.http.post(environment.apiBaseUrl + '/Sammelstueckkopieren', sendData).subscribe((data) => {\n            location.reload();\n          });\n          this.navigateBack();\n        }\n      }\n        })\n      }\n\n  navigateBack(){\n    this.router.navigateByUrl('/sammlung/' + this.collectionID);\n  }\n\ngetID(sammelstuecke){\nthis.highestID = 0;\nfor(let i = 0; i<sammelstuecke.length; i++){\nif(sammelstuecke[i].id>this.highestID){\n  this.highestID = sammelstuecke[i].id\n}\n}\n//console.log(this.highestID);\nthis.pieceID = this.highestID +1;\n}\n\n}\n","<hr/>\n<ul class=\"pieces\" (click)=\"choseThis()\">\n    <div class=\"catalogue-grid-container-inside\">\n      <div class=\"name-image-container\">\n        <span class=\"piece-name\">{{sammelstueck.pieceName}}</span>\n        <img class=\"image\" width=\"300\" [src]=\"getImageURL()\">\n      </div>\n      <span class=\"description\">{{sammelstueck.pieceDescription}}</span>\n    </div>\n</ul>\n<hr/>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {FormControl} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-sammelstueck-kopieren',\n  templateUrl: './sammelstueck-kopieren.component.html',\n  styleUrls: ['./sammelstueck-kopieren.component.css']\n})\n\n\nexport class SammelstueckKopierenComponent implements OnInit {\n  public sammelstuecke: SammelStueck[] = [];\n  public sammelstueckeOfOwnCollection: SammelStueck[] = [];\n  public resultsammelstuecke: SammelStueck[] = [];\n  @Input() sammelstueck: SammelStueck;\n  public collectionID: String;\n  public constant: string = '-Sammlung';\n  public sammlungsname: string;\n  public besitzername: string;\n  public headline: string;\n  public userInputFormControl = new FormControl();\n  public usersInput: string;\n  public id: number;\n  public filteredSammelstuecke: SammelStueck[] = [];\n\n\n  constructor(private readonly http: HttpClient, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\")\n    this.collectionID = urlChunks[urlChunks.length - 1];\n    //gets the collection id from the path\n    this.loadSammelstuecke();\n    this.loadSammlung();\n    this.userInputFormControl.valueChanges.subscribe(searchText => {\n      this.filteredSammelstuecke = this.resultsammelstuecke.filter(sammelstueck => {\n        //search the shown pieces for a name that matches the input without regarding capitalisation\n        return sammelstueck.pieceName.toLowerCase().includes(searchText.toLowerCase());\n      });\n    })\n  }\n\n  private loadSammelstuecke() {\n    this.http.get<SammelStueck[]>(environment.apiBaseUrl + '/OtherSammelstuecke/' +this.collectionID).subscribe((data) => {\n    this.sammelstuecke = data;\n    //gets all the pieces in the database\n     this.http.get<SammelStueck[]>(environment.apiBaseUrl + '/Sammelstuecke/'+this.collectionID).subscribe((data) => {\n        this.sammelstueckeOfOwnCollection = data;\n        //gets all the pieces in the collection\n        for(let i=0; i<this.sammelstuecke.length; i++){\n          if(!this.testIfItExistsInThisCollection(this.sammelstuecke[i])){\n            this.resultsammelstuecke.push(this.sammelstuecke[i]);\n            //checks for all pieces in the database if they are in the collection and if not adds them to the array\n          }\n        }\n        this.filteredSammelstuecke = this.resultsammelstuecke;\n        //filteredSammelstuecke contains all pieces that are not in the collection\n        //page loads filteredSammelstuecke\n      });\n    });\n  }\n\n  private testIfItExistsInThisCollection(sammelstueck) {\n    //checks for one piece if it matches each piece in the collection\n    for(let i=0; i<this.sammelstueckeOfOwnCollection.length; i++){\n      if(sammelstueck.id == this.sammelstueckeOfOwnCollection[i].id){\n        //if both pieces have the same id, it returns that this piece is in the collection\n        return true;\n      }\n    }\n    return false;\n    //if it didn't match any pieces it returns false\n  }\n\n  private loadSammlung(){\n    //gets the collection data for this collection and loads the name of the collection into the header\n    this.http.get<Sammlung[]>(environment.apiBaseUrl + '/Sammlung/' + this.collectionID).subscribe((data) => {\n      this.sammlungsname = data[0].collectionName;\n      console.log(this.sammlungsname);\n      this.headline = 'Bitte wählen Sie ein Sammelstück aus, das Sie zur ' + this.sammlungsname + \"-Sammlung \" + ' hinzufügen möchten';\n    });\n  }\n\n  navigateBack(){\n    //navigates back to the add-a-piece-page\n    this.router.navigateByUrl('/hinzufuegen/' + this.collectionID);\n  }\n}\n","<header>\n  <h1>{{headline}}</h1>\n  <input type=\"text\" class=\"search\" placeholder=\"Suche..\" [formControl]=\"userInputFormControl\">\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<div class=\"catalogue-grid-container-outside\">\n  <div *ngFor=\"let sammelStueck of filteredSammelstuecke\">\n    <app-sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk  [sammelstueck]=\"sammelStueck\"></app-sammelstueck-zu-weiterer-sammlung-hzfg-auswahlmoeglichk>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\n\n\n@Component({\n  selector: 'app-sammelstueck',\n  templateUrl: './sammelstueck.component.html',\n  styleUrls: ['./sammelstueck.component.css']\n})\nexport class SammelstueckComponent implements OnInit {\n  @Input() sammelstueck: SammelStueck;\n  public nameOfCollectionPiece: string;\n  public descriptionOfCollectionPiece: string;\n  //Die muss übergeben wrden\n  public id: string;\n  // !!! Die muss eigentlich übergeben werden, damit das richtig funktioniert\n  public collectionID: string;\n\n\n  constructor(private readonly http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\")\n    this.id = urlChunks[urlChunks.length - 1];\n    this.collectionID = urlChunks[urlChunks.length - 2];\n    //gets the collectionID and the pieceID from the path\n    this.loadSammelstueck();\n  }\n\n  private loadSammelstueck() {\n    //loads the piece into the frame\n    let url = environment.apiBaseUrl + '/sammelstueck/' + this.id;\n    this.http.get<SammelStueck[]>(url).subscribe((data) => {\n     this.nameOfCollectionPiece = data[0].pieceName;\n     this.descriptionOfCollectionPiece = data[0].pieceDescription;\n     this.sammelstueck=data[0];\n    });\n  }\n\n  navigateBack() {\n    //navigates back to the collection\n    console.log(\"navigateBack wird ausgeführt\");\n    this.router.navigateByUrl('/sammlung/' + this.collectionID);\n  }\n\n  navigateTosammelstueckbearbeiten() {\n    //navigates to the edit page of this piece\n    console.log(\"navigateTosammelstueckbearbeiten wird ausgeführt\");\n    this.router.navigateByUrl( `/sammelstueckbearbeiten/${this.collectionID}/${this.id}`);\n  }\n\n  getImageURL(){\n    //returns image path\n    console.log(this.sammelstueck);\n    return `${environment.apiBaseUrl}/${this.sammelstueck.pieceImagePath}`;\n  }\n\n  deleteSammelstueck() {\n    console.log(\"deleteSammelstueck wird ausgeführt\");\n    //asks if the user really means to delete this piece\n    if (confirm(`Möchten Sie das Sammelstück \"${this.sammelstueck.pieceName}\" wirklich aus der Sammlung entfernen? Vollständig gelöschte Sammelstücke können nicht wieder hergestellt werden`)) {\n      const sendData = {id: this.id, collectionID: this.collectionID};\n      this.http.post(environment.apiBaseUrl + '/deleteSammelstueck', sendData).subscribe((data) => {\n      //deletes the piece in this collection from the database\n        console.log(\"DELETED\");\n      });\n      this.navigateBack();\n      //navigates back to the sammlung page\n    }\n  }\n}\n","<header>\n  <h1 id=\"name\">{{nameOfCollectionPiece}}</h1>\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<body>\n  <div id=\"content\">\n    <div class = \"container\">\n      <article>\n        <p id=\"description\">{{descriptionOfCollectionPiece}}</p>\n      </article>\n      <article>\n        <div class=\"image-responsive-maker\">\n          <img class=\"image\" height=\"\" width=\"220\" [src]=\"getImageURL()\">\n        </div>\n        <span class =\"button edit\" (click)=\"navigateTosammelstueckbearbeiten()\"><i class=\"fas fa-edit\"></i></span>\n        <span class = \"button delete\" (click)=\"deleteSammelstueck()\"><i class=\"far fa-trash-alt\"></i></span>\n      </article>\n    </div>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-sammlung-anlegen',\n  templateUrl: './sammlung-anlegen.component.html',\n  styleUrls: ['./sammlung-anlegen.component.css']\n})\nexport class SammlungAnlegenComponent implements OnInit {\n  public collectionName: string;\n  public collectorsName: string;\n  public numOfSammlungen: number;\n  public sammlungID: number;\n  public highestID: number;\n\n  constructor(private readonly http: HttpClient, private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  navigateBack() {\n    this.router.navigateByUrl('');\n    //navigates back to the collections page\n  }\n\n  titleChanged($event: Event) {\n    //title changed\n  }\n\n  addClicked() {\n    if(this.collectionName==\"\"||this.collectionName==undefined){\n      alert(\"Bitte geben Sie einen Namen der Sammlung an\");\n      //alerts the user if there is no name input and asks them to input one\n    }\n    else if(this.collectorsName==\"\"||this.collectorsName==undefined){\n      alert(\"Bitte geben Sie einen Besitzer der Sammlung an\");\n      //alerts the user if there is no owner input and asks them to input one\n    }\n    else {\n      let sendDataDoesExist = {title: this.collectionName, id: this.sammlungID};\n      this.http.post<{doesExist: boolean}>(environment.apiBaseUrl + '/doesSammlungExist', sendDataDoesExist).subscribe((data) => {\n        const doesExist = data.doesExist;\n         //checks if there already is a collection with this data\n        if(doesExist){\n          if (confirm(`Es gibt bereits eine Sammlung mit Namen \"${this.collectionName}\". Möchten Sie eine gleichnamige Sammlung erstellen?`)) {\n          //if collection already exists asks user if they want to create it again\n              const sendData = {collectionName: this.collectionName, collectorsName: this.collectorsName};\n              this.http.post(environment.apiBaseUrl + '/Sammlungen', sendData).subscribe((data) => {\n                this.navigateBack();\n                //creates a new collection in database and navigates back to the collections page\n              });\n          }\n        }\n        else {\n            const sendData = {collectionName: this.collectionName, collectorsName: this.collectorsName};\n            this.http.post(environment.apiBaseUrl + '/Sammlungen', sendData).subscribe((data) => {\n              this.navigateBack();\n              //creates a new collection in database and navigates back to the collections page\n            });\n        }\n      });\n    }\n  }\n}\n","<header>\n  <h1 id = \"headline\">Neue Sammlung anlegen</h1>\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<div id = \"input-fields\" class = \"container\">\n  <div id=\"content\">\n    <p>Name der Sammlung:</p>\n    <input [(ngModel)]=\"collectionName\" type=\"text\" name=\"name-der-sammlung\" class=\"name-input\" id=\"collectionName\">\n    <p>Besitzer der Sammlung:</p>\n    <input [(ngModel)]=\"collectorsName\" type=\"text\" name=\"besitzer-der-sammlung\" class=\"besitzer-input\" id=\"owner\">\n  </div>\n  <span class = \"button add\" (click)=\"addClicked()\"><i class=\"fas fa-plus\"></i></span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'app-sammlung-bearbeiten',\n  templateUrl: './sammlung-bearbeiten.component.html',\n  styleUrls: ['./sammlung-bearbeiten.component.css']\n})\nexport class SammlungBearbeitenComponent implements OnInit {\n  public collectionName: string = \"beispielsammlungsname\";\n  public collectorsName: string = \"Beispielbesitzer\";\n  //Die muss übergeben werden!\n  public id: string;\n\n  constructor(private readonly http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"#\")\n    this.id = urlChunks[urlChunks.length - 1];\n    //gets the collection id with the path\n    this.loadOldEntry();\n  }\n\n  navigateBack() {\n    this.router.navigateByUrl('');\n    //navigates back to the collections page\n  }\n\n  editClicked() {\n    if(this.collectionName==\"\" || this.collectionName==undefined){\n      alert(\"Bitte geben Sie einen Namen der Sammlung an\");\n      //alerts the user if there is no name input and asks them to input one\n    }\n    else if(this.collectorsName==\"\" || this.collectorsName==undefined){\n      alert(\"Bitte geben Sie einen Besitzer der Sammlung an\");\n      //alerts the user if there is no owner input and asks them to input one\n    }\n    else{\n      let sendDataDoesExist = {title: this.collectionName, id: this.id};\n      this.http.post<{doesExist: boolean}>(environment.apiBaseUrl + '/doesSammlungExist', sendDataDoesExist).subscribe((data) => {\n        const doesExist = data.doesExist;\n         //checks if there already is a collection with this data\n        if(doesExist){\n          if (confirm(`Es gibt bereits eine Sammlung mit Namen \"${this.collectionName}\". Möchten Sie eine gleichnamige Sammlung erstellen?`)) {\n          //if collection already exists asks user if they want to create it again\n            const sendData = {id: this.id, collectionName: this.collectionName, collectorsName: this.collectorsName};\n            this.http.post(environment.apiBaseUrl + '/updateSammlung', sendData).subscribe((data) => {\n            });\n            this.navigateBack();\n            //updates the collection in the database and navigates back to the collections page\n          }\n        }\n        else {\n          const sendData = {id: this.id, collectionName: this.collectionName, collectorsName: this.collectorsName};\n          this.http.post(environment.apiBaseUrl + '/updateSammlung', sendData).subscribe((data) => {\n          });\n          this.navigateBack();\n          //updates the collection in the database and navigates back to the collections page\n        }\n      });\n    }\n  }\n\n  private loadOldEntry() {\n      this.http.get<Sammlung[]>(environment.apiBaseUrl + '/Sammlung/' + this.id).subscribe((data) => {\n      this.collectionName = data[0].collectionName;\n      this.collectorsName = data[0].collectorsName;\n         //loads the current data of the piece into the input fields so it can be edited\n   });\n\n  }\n}\n","<header>\n  <h1>Sammlung bearbeiten</h1>\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<div id = \"input-fields\">\n  <div id=\"content\">\n    <p>Name der Sammlung:</p>\n    <input type=\"text\" [(ngModel)]=\"collectionName\" name=\"name-der-sammlung\" class=\"name-input\" id=\"collectionName\">\n    <p>Besitzer der Sammlung:</p>\n    <input type=\"text\" [(ngModel)]=\"collectorsName\" name=\"besitzer-der-sammlung\" class=\"besitzer-input\" id=\"owner\">\n  </div>\n  <span class = \"button edit\" (click) = \"editClicked()\"><i class=\"fas fa-edit\"></i></span>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SammelStueck} from \"../../../models/sammel-stueck\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {environment} from \"../../../../environments/environment\";\n\n\n@Component({\n  selector: 'app-sammlung-sammelstueck',\n  templateUrl: './sammlung-sammelstueck.component.html',\n  styleUrls: ['./sammlung-sammelstueck.component.css']\n})\nexport class SammlungSammelstueckComponent implements OnInit {\n  @Input() sammelstueck: SammelStueck;\n  public collectionID: string;\n\n  public readonly fallbackImageUrl = `${environment.apiBaseUrl}/images/defaultPic.jpg`\n\n  constructor(private readonly http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\")\n    this.collectionID = urlChunks[urlChunks.length - 1];\n    //gets the collection id from the url\n  }\n\n\n  navigateToSammelstueck(id){\n    //navigates to the page of the piece with this id\n    this.router.navigateByUrl(\"/sammelstueck/\" +  this.collectionID + \"/\" +id );\n  }\n\n  getImageURL(){\n    //returns image path\n    return `${environment.apiBaseUrl}/${this.sammelstueck.pieceImagePath}`;\n  }\n\n  navigateBack() {\n    //navigates back to the first page\n    this.router.navigateByUrl('');\n  }\n\n  deleteClicked(id) {\n    if (confirm(`Möchten Sie das Sammelstück \"${this.sammelstueck.pieceName}\" wirklich aus der Sammlung entfernen? Vollständig gelöschte Sammelstücke können nicht wieder hergestellt werden`)) {\n      //asks user if they really meant to delete this piece\n      const sendData = {id: id, collectionID: this.collectionID};\n      this.http.post(environment.apiBaseUrl + '/deleteSammelstueck', sendData).subscribe((data) => {\n        //deletes the piece\n      });\n      location.reload();\n      //reloads th window\n    }\n  }\n}\n","<ul class=\"pieces\">\n  <div class=\"catalogue-grid-container-inside\">\n    <div class=\"name-image-container\" (click)=\"navigateToSammelstueck(sammelstueck.id)\">\n      <span class=\"piece-name\">{{sammelstueck.pieceName}}</span>\n      <img class=\"image\" width = \"200\" height = \"200\" [src]=\"getImageURL()\" onError=\"this.src='assets/defaultPic.jpg'\">\n    </div>\n    <button class =\"button delete\" (click)=\"deleteClicked(sammelstueck.id)\"><i class=\"far fa-trash-alt\"></i></button>\n  </div>\n</ul>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {Sammlung} from \"../../models/sammlung\";\nimport {threadId} from 'worker_threads';\nimport {FormControl} from \"@angular/forms\";\nimport {environment} from \"../../../environments/environment\";\n\n\n@Component({\n  selector: 'app-sammlung',\n  templateUrl: './sammlung.component.html',\n  styleUrls: ['./sammlung.component.css']\n})\nexport class SammlungComponent implements OnInit {\n  public collectionName: string;\n  public ownerName: string;\n  public sammelstuecke: SammelStueck[] = [];\n  public filteredSammelstuecke: SammelStueck[] = [];\n  public headline: string;\n  //muss eigentlich übergeben werden!\n  public id: number;\n  public usersInput: string;\n\n  public userInputFormControl = new FormControl();\n\n\n  constructor(private readonly http: HttpClient, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    const urlChunks = window.location.href.split(\"/\");\n    const url = `/${urlChunks[urlChunks.length - 2]}/${urlChunks[urlChunks.length - 1]}`;\n    this.loadSammlung(url);\n    this.loadSammelstuecke(url);\n    this.userInputFormControl.valueChanges.subscribe(searchText => {\n      //gets all pieces that match the search inout ignoring capitalisation\n      this.filteredSammelstuecke = this.sammelstuecke.filter(sammelstueck => {\n        return sammelstueck.pieceName.toLowerCase().includes(searchText.toLowerCase());\n      });\n    })\n  }\n\n  private loadSammlung(pathname) {\n    //loads the data that belongs to this collection and puts it in the header\n    let url = environment.apiBaseUrl + pathname;\n    this.http.get<Sammlung[]>(url).subscribe((data) => {\n      this.id = data[0].id;\n      this.collectionName = data[0].collectionName;\n      this.ownerName = data[0].collectorsName;\n      this.headline = this.collectionName + \"-Sammlung von \" + this.ownerName;\n    });\n  }\n\n  private loadSammelstuecke(pathname) {\n    let myPath = pathname.split(\"/\")[2];\n    //gets the path to the database connection\n    let url = environment.apiBaseUrl + \"/Sammelstuecke/\" + myPath;\n    this.http.get<SammelStueck[]>(url).subscribe((data) => {\n      //loads and displays all pieces that belong to this collection\n      this.sammelstuecke = data;\n      this.filteredSammelstuecke = this.sammelstuecke;\n    });\n  }\n\n  navigateBack() {\n    this.router.navigateByUrl('');\n    //navigates back to the collections page\n  }\n\n  navigateToKatalog() {\n    this.router.navigateByUrl('katalog/' + this.id);\n    //navigates to the catalogue of this collection\n  }\n\n  navigateToSammelstueckhinzufuegen() {\n    this.router.navigateByUrl('/hinzufuegen/' + this.id);\n   //navigates to the add-a-piece-to-this-collection page\n  }\n\n  navigateToChecklist() {\n    this.router.navigateByUrl(\"/checklist/\" + this.id);\n    //navigates to this collections checklist\n  }\n\n  navigateToSammelstueck(pieceID) {\n    this.router.navigateByUrl('/sammelstueck/' + pieceID);\n    //navigates to the piece\n  }\n}\n","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<header>\n  <h1>{{headline}}</h1>\n</header>\n<span class=\"button back\" (click)=\"navigateBack()\"><i class=\"fas fa-arrow-left\"></i></span>\n<body>\n<div class=\"collection-body\">\n  <div class=\"top-row\">\n    <div class=\"search\">\n      <input type=\"text\" placeholder=\"Suche..\" [formControl]=\"userInputFormControl\">\n    </div>\n  </div>\n  <div class=\"buttons\">\n    <button class =\"button checklist\" (click)=\"navigateToChecklist()\"><i class=\"fa fa-th-list\" aria-hidden=\"true\"></i></button>\n    <span class=\"button upload\" (click)=\"navigateToKatalog()\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i></span>\n    <button class=\"button add\" (click)=\"navigateToSammelstueckhinzufuegen()\"><i class=\"fas fa-plus\"></i></button>\n  </div>\n  <div class=\"pieces-box\">\n    <div *ngFor=\"let sammelStueck of filteredSammelstuecke\">\n      <app-sammlung-sammelstueck  [sammelstueck]=\"sammelStueck\"></app-sammlung-sammelstueck>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Sammlung} from \"../../../models/sammlung\";\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {SammelStueck} from \"../../../models/sammel-stueck\";\nimport {environment} from \"../../../../environments/environment\";\n\n@Component({\n  selector: 'app-sammlungen-uebersicht-sammlung',\n  templateUrl: './sammlungen-uebersicht-sammlung.component.html',\n  styleUrls: ['./sammlungen-uebersicht-sammlung.component.css']\n})\nexport class SammlungenUebersichtSammlungComponent implements OnInit {\n  public collectionName: string;\n  public id: number;\n  public numberOfPieces: number;\n  public sammelstuecke: SammelStueck[] = [];\n  @Input() sammlung: Sammlung;\n\n  constructor(private readonly http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToSammlungBearbeiten(id) {\n    this.router.navigateByUrl('/sammlungbearbeiten#' + id);\n    //navigates to edit-collection page\n  }\n\n  deleteSammlung(id) {\n    if (confirm(`Möchten Sie die Sammlung \"${this.sammlung.collectionName}\" wirklich löschen? Die Sammlung und darin gespeicherte Sammelstücke können nicht wieder hergestellt werden`)) {\n    //checks if the user really wants to delete the collection\n      const sendData = {id: id};\n      this.http.post(environment.apiBaseUrl + '/deleteSammlung', sendData).subscribe((data) => {\n        //deletes the collection and its pieces from the database\n        location.reload();\n        //reload the window\n      });\n    }\n    }\n\n  navigateToSammlung(collectionid) {\n    let url = \"/sammlung/\" +collectionid;\n    this.router.navigateByUrl(url);\n    //navigates to a collection page\n  }\n}\n","<ul class=\"sammlungsstueck-liste\">\n  <li class=\"sammlung\">\n    <div class=\"sammelstueck\" (click)=\"navigateToSammlung(sammlung.id)\" data-id=\"\">\n      <article class = \"collectionName\">\n        <p>{{sammlung.collectionName}}</p>\n      </article>\n    </div>\n    <span class =\"button edit\" (click)=\"navigateToSammlungBearbeiten(sammlung.id)\"><i class=\"fas fa-edit\"></i></span>\n    <span class = \"button delete\" (click)=\"deleteSammlung(sammlung.id)\"><i class=\"far fa-trash-alt\"></i></span>\n  </li>\n</ul>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Sammlung} from \"../../models/sammlung\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {SammelStueck} from \"../../models/sammel-stueck\";\nimport {environment} from \"../../../environments/environment\";\n\n\n@Component({\n  selector: 'app-sammlungenuebersicht',\n  templateUrl: './sammlungenuebersicht.component.html',\n  styleUrls: ['./sammlungenuebersicht.component.css']\n})\nexport class SammlungenuebersichtComponent implements OnInit {\n  @Input() sammlung: Sammlung;\n  public sammlungen: Sammlung[] = [];\n\n  constructor(private readonly http: HttpClient, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.loadSammlungen();\n  }\n\n  private loadSammlungen() {\n    this.http.get<Sammlung[]>(environment.apiBaseUrl + '/Sammlungen').subscribe((data) => {\n      this.sammlungen = data;\n     //loads all collections from database\n    });\n  }\n\n  navigateToNeueSammlungAnlegen() {\n    this.router.navigateByUrl('/sammlunganlegen');\n    //navigates to the add-collection page\n  }\n\n}\n","<header>\n  <h1>Meine Sammlungen</h1>\n</header>\n\n<div id=\"content\">\n  <div id=\"sammlungsstuecke\">\n\n  </div>\n</div>\n<div id =\"body\">\n  <span class = \"button add\" (click)=\"navigateToNeueSammlungAnlegen()\"><i class=\"fas fa-plus\"></i></span>\n  <div id=\"sammlungs-template\">\n    <div *ngFor=\"let sammlung of sammlungen\">\n      <app-sammlungen-uebersicht-sammlung [sammlung]=\"sammlung\"></app-sammlungen-uebersicht-sammlung>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // apiBaseUrl: environment.apiBaseUrl + ''\n  apiBaseUrl: 'http://setzkasten-env.eba-mr73ptsz.eu-west-1.elasticbeanstalk.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}